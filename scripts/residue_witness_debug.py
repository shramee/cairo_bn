# This script follows paper 'On Proving Pairings' - https://eprint.iacr.org/2024/640
# to generate residue witness for the final exponentiation.

# From 2.1 Eliminating the Final Exponentiation,
# Two elements x, y ∈ F are equivalent if there exists some c such that  x * c**r = y
# Our optimization avoids this cost by instead providing c as auxiliary input and
# directly checking xcr = y. In this way we replace an exponentiation by (q**k − 1)/r
# with an exponentiation by r, which in general is much cheaper.


# from py_ecc import bn128, fields
# from py_ecc.bn128 import bn128_curve;
from py_ecc.fields import (
    bn128_FQ as FQ,
    bn128_FQ12 as FQ12,
)

from residue_witness import print_fq12, tower_to_direct, x, q, r, unity


def fq12(*coeffs) -> FQ12:
    return FQ12(tower_to_direct(coeffs))


λ = 6 * x + 2 + q - q**2 + q**3
λ1 = 6 * x + 2
λ2 = q - q**2 + q**3
m = λ // r
d = 3  # = gcd(m, h)

f = fq12(
    0x1BF4E21820E6CC2B2DBC9453733A8D7C48F05E73F90ECC8BDD80505D2D3B1715,
    0x264F54F6B719920C4AC00AAFB3DF29CC8A9DDC25E264BDEE1ADE5E36077D58D7,
    0xDB269E3CD7ED27D825BCBAAEFB01023CF9B17BEED6092F7B96EAB87B571F3FE,
    0x25CE534442EE86A32C46B56D2BF289A0BE5F8703FB05C260B2CB820F2B253CF,
    0x33FC62C521F4FFDCB362B12220DB6C57F487906C0DAF4DC9BA736F882A420E1,
    0xE8B074995703E92A7B9568C90AE160E4D5B81AFFE628DC1D790241DE43D00D0,
    0x84E35BD0EEA3430B350041D235BB394E338E3A9ED2F0A9A1BA7FE786D391DE1,
    0x244D38253DA236F714CB763ABF68F7829EE631B4CC5EDE89B382E518D676D992,
    0x1EE0A098B62C76A9EBDF4D76C8DFC1586E3FCB6A01712CBDA8D10D07B32C5AF4,
    0xD23AEB23ACACF931F02ECA9ECEEE31EE9607EC003FF934694119A9C6CFFC4BD,
    0x16558217BB9B1BCDA995B123619808719CB8A282A190630E6D06D7D03E6333CA,
    0x14354C051802F8704939C9948EF91D89DB28FE9513AD7BBF58A4639AF347EA86,
)

# residue witness c,

wi = fq12(
    0x0,
    0x0,
    0x25BA8E0531275A44594C4F53B44497BD8D7341FD41E5FAF337FA74DBBFF9FE1,
    0x10BD041A04B5422922463BD8B6519B59AF036109A228AA43FDB7F215226ECE12,
    0x0,
    0x0,
    0x0,
    0x0,
    0x0,
    0x0,
    0x0,
    0x0,
)


c = fq12(
    0x1BAF2A84EB47CE42094FD98972BC4BB0F2936EF400AEA71EAFF2C663E3A0FC4D,
    0x1386BA1F43D9BFA49764547C97CCE737F86A88B32D9129370BDD1C3AACEAE690,
    0x19CA8ADFE0165968C479453CEAC5D78D54BEEC199FD30AF10476E46A7DA56127,
    0x8C68AD81FEFA3678A4C488228F6EC2E68FAB44F5FC386A71EDF490D13165BAF,
    0xAA529AD6ED3D0A32AA2ABD113EF97605F58EEA5ACE47A9A946899FAEFCB3895,
    0x1EEED7320D8C8646893377A138B1A265F171E37E7F73A58C52D4EC94E6BC0529,
    0x1E46A4AB1EFE63CC304F321E79B74B5E52728DF2FC3F3043DCDFCF9F816C568C,
    0x2C12B2472CFFC96EF1CD313AEAE8462296F4AD7B8E6B06073C97B7F0EBF0AD31,
    0x5303C5EDED61BD49638D9B64B23971F19C50BC4651EC93DF1EE04C676CF5B77,
    0x130BA50AED6232A4885AD91EE99E4A7B2C0D65E4F2CED84DE31F0449AD05CA0A,
    0xA5AEC882CA48F7ED31209C6EA95B0CD055CBD8C184715CE59C40CCF95C566CD,
    0x40837988D67F97256BB7E5E121802B523F460B3713E079588A5FF10659CFE2D,
)

c_inv = fq12(
    0x5B9A079BC26832A0F6C91A8C3D52F0696E128C4DC02C2E7ECCD6750879DB37F,
    0x2E555F161B4D72F939FFDC89EC00F1933D46DBBA698EB47DD16427D357FC293D,
    0x1B137F9BF629C0DBCDD8087034E1F3557CE533998E4E2566B9961515FE3E8874,
    0x9D878A403981D9DC63F4987D88DF92F797412464F26753411B8E7500D316487,
    0x14E05EB80B6F7E23ECFA04A410CFA1CF8036F3161C7D586802B485FBA82FA9E9,
    0x35039DC8C011DB7EB2C0E91709001BA13C91C6B2A06F5ED32005C4990ED64CB,
    0xB67955A9EED460C7FE5F21790CB806E1A6FAA832E5ED9751F4C769B94F233D4,
    0x1A87D2B49B7FE718A8AAED495061C6C7AB0F83010AA102BADCE3B5F057717586,
    0x1426DBE6A25C91A8D3AC59A34C4EA7D7E0075EF206A5DD08A33D1998B58651C1,
    0x27ACB2E47242C471014D129C1A37D0FB662480C13480796CDC381735384A6C5A,
    0x7459382FD7B5F159E32AE6EB1F5A1AC9ADDE6E0E347011855CC9F8B5BC89021,
    0x2884F79CD78DBEF6B64FD2A8AF7ABBB9CB36D280C0C63074E74F0287D3B2EB2D,
)

residue_witness_inv = c_inv
residue_witness = c

result = fq12(
    0x13AF51346FCB83AA1650401798E0CFB82BE941D8177C820015401ABC4633EFBA,
    0x6A0A1CFC31F4E1E29BCC92A9645725C99EF9DCB0AF61D8E98DA46F38D545ACA,
    0x26525EFFEE4272C2A60082C85AAAFA4CB108460D383AB60FB6D3975634774B3C,
    0x302064758ABD89A965761F9F8B396B3B1D45C8C9BBFC2E390A90ADFED25513EB,
    0x2C23E45935523B053F64D343D4B800DA5D4F23EF1CEDD1011BA33CFC4DF6A1A2,
    0x264F18AA0ADB699268AD8E37BDE593A18532272322A43EA7A736DED5DDF425A6,
    0xCEDECF1C74679480B4283BB5E21D800ABE36BF03D104594CEED2E27C91309A9,
    0x12DFA99D96B5975EEC3C8A11F65BD9FD03E4BC09461BF6E719A9713AC4B5DFF5,
    0x9B5DD887466E161D10CD294BC5721B1A617FDEE639C539421C6A01074534CA,
    0x1A30DF9ADAE8F8283D532DED6C7F8AA86E335E5BAC6E5F944005577DAD411671,
    0x2A56D86D756A30581D028038B9C644E2A295AAE822ED1C8AC47C21595C346584,
    0xF0AAB0B39EFDC2C328E80CA303C5AFE6D15A6E629CB52061F140E5381FB6F3F,
)

result_ccc = fq12(
    0x2BEAA9B58CB027E751A8F5B30E1EFBC84F4B0422D561CA0FFE3E3DA0576CA5D4,
    0x28B0862910162BA93029AC01C45FF5BA915070989865D16E93778867567FC958,
    0x14994368A9126CC5EE42E0D0E1A6A30FC2969557155C52F8ED588D075BBD036F,
    0x26EE8131C53BEE6A28AB310343C646CF46365F9C17CBAB6C458B9041C8F6D3BC,
    0x17021E95106BB39C4C9C051365EA1CFA7116E84B848B4972DF3B8F88CD3ADEC9,
    0x16FD73F1F2EBF74CD5E840A4465D8AE2F33D49CB25519F5339D952CFAF4F23D6,
    0x11EA2639C42EBA6C893E930D22413222B1284609590EA0DAC6D28DB77AF6A0CA,
    0x1BE749CA3ECBE56F60FAC823F6A57A29AC0FAA61C684CC52B13E852656F6651B,
    0xAADC080991B2E52B021383CB2EF21906227216EF6564D970957BDC875378443,
    0x5497272259B66D29976945969168E70AE8B25BE4D5F8DF2EC5725CCCDDFB83,
    0x283ED886085F3A857EE21109F70BC3599F2A172BB3BB4749B0A13E96A77B32BC,
    0x219964A51020F3ED73C36462DA50BF58D8CC7300ABB3B976C5EB36A45D994027,
)

assert c_inv**λ * f * wi == unity, "pairing not 1"

# print_fq12("miller_with_cinv = ", (c_inv**λ1) * wi)

# print_fq12("pairing:", (c_inv**λ1) * f * wi * (c_inv**λ2))

print_fq12("result_ccc = ", result * (residue_witness_inv**λ2))

print_fq12(
    "result_ccc = ",
    result * (residue_witness_inv**q) ** (q * q * q) * (residue_witness ** (q * q)),
)

result_lambda_2 = fq12(
    0x2BEAA9B58CB027E751A8F5B30E1EFBC84F4B0422D561CA0FFE3E3DA0576CA5D4,
    0x28B0862910162BA93029AC01C45FF5BA915070989865D16E93778867567FC958,
    0x14994368A9126CC5EE42E0D0E1A6A30FC2969557155C52F8ED588D075BBD036F,
    0x26EE8131C53BEE6A28AB310343C646CF46365F9C17CBAB6C458B9041C8F6D3BC,
    0x17021E95106BB39C4C9C051365EA1CFA7116E84B848B4972DF3B8F88CD3ADEC9,
    0x16FD73F1F2EBF74CD5E840A4465D8AE2F33D49CB25519F5339D952CFAF4F23D6,
    0x11EA2639C42EBA6C893E930D22413222B1284609590EA0DAC6D28DB77AF6A0CA,
    0x1BE749CA3ECBE56F60FAC823F6A57A29AC0FAA61C684CC52B13E852656F6651B,
    0xAADC080991B2E52B021383CB2EF21906227216EF6564D970957BDC875378443,
    0x5497272259B66D29976945969168E70AE8B25BE4D5F8DF2EC5725CCCDDFB83,
    0x283ED886085F3A857EE21109F70BC3599F2A172BB3BB4749B0A13E96A77B32BC,
    0x219964A51020F3ED73C36462DA50BF58D8CC7300ABB3B976C5EB36A45D994027,
)
